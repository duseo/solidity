{"contracts":{"A":{"C":{"ewasm":{"wasm":"0061736d0100000001470b6000006000017e6000017f60017e017e60047e7e7e7e017f60087e7e7e7e7e7e7e7e00600c7e7e7e7e7e7e7e7e7e7e7e7e0060017f0060017f017f60027f7f0060037f7f7f00026e0508657468657265756d08636f6465436f7079000a08657468657265756d06726576657274000908657468657265756d0c67657443616c6c56616c7565000708657468657265756d0666696e697368000908657468657265756d1167657452657475726e4461746153697a650002030b0a0004040808030601050505030100010610037e0142000b7e0142000b7e0142000b071102066d656d6f72790200046d61696e000500be030c435f335f6465706c6f7965640061736d01000000011a056000006000017f60047e7e7e7e017f60017f017f60027f7f0002300208657468657265756d06726576657274000408657468657265756d1167657452657475726e4461746153697a65000103060500020203030503010001060100071102066d656d6f72790200046d61696e00020ab50205a20103017e027f057e02404200210020002000200042c00010032101200141c0006a210220022001490440000b2000a71006ad422086210320032000422088a71006ad84210420022004370000200241086a2004370000200241106a2004370000428001a71006ad4220862105200241186a2005428001422088a71006ad843700001001ad21061001ad2107200020002000200710042000200020002006100310000b0b2901017f024042002000200184200284520440000b42002003422088520440000b2003a721040b20040b2601027f0240200020012002200310032105200541c0006a210420042005490440000b0b20040b1f01017f024020004108744180fe0371200041087641ff01717221010b20010b1e01027f02402000100541107421022002200041107610057221010b20010b0ac6040a970203017e017f157e02404200210020002000200042c000100721012000100a210220012002370000200141086a2002370000200141106a2002370000200141186a428001100a370000410010024100290000100a2103410041086a290000100a2104410041106a290000100a210520032004842005410041186a290000100a8484504504400240100c21062300210723012108230221090b0240100c210a2300210b2301210c2302210d0b200a200b200c200d2006200720082009100e0b42b103210e0240100c210f2300211023012111230221120b200f201020112012200020002000428802200020002000200e100b0240100c21132300211423012115230221160b2013201420152016200020002000200e100d0b0b2901017f024042002000200184200284520440000b42002003422088520440000b2003a721040b20040b2601027f0240200020012002200310062105200541c0006a210420042005490440000b0b20040b1f01017f024020004108744180fe0371200041087641ff01717221010b20010b1e01027f02402000100841107421022002200041107610087221010b20010b2201027e02402000a71009ad422086210220022000422088a71009ad8421010b20010b25000240200020012002200310072004200520062007100620082009200a200b100610000b0b1a01047e02401004ad21030b20012400200224012003240220000b1b000240200020012002200310072004200520062007100610030b0b1b000240200020012002200310072004200520062007100610010b0b","wast":"(module
    ;; custom section for sub-module
    ;; The Keccak-256 hash of the text representation of \"C_3_deployed\": 603ebd2801e128046239523a1467c5ebb690fff231bbffe4074f81586eb77370
    ;; (@custom \"C_3_deployed\" \"0061736d01000000011a056000006000017f60047e7e7e7e017f60017f017f60027f7f0002300208657468657265756d06726576657274000408657468657265756d1167657452657475726e4461746153697a65000103060500020203030503010001060100071102066d656d6f72790200046d61696e00020ab50205a20103017e027f057e02404200210020002000200042c00010032101200141c0006a210220022001490440000b2000a71006ad422086210320032000422088a71006ad84210420022004370000200241086a2004370000200241106a2004370000428001a71006ad4220862105200241186a2005428001422088a71006ad843700001001ad21061001ad2107200020002000200710042000200020002006100310000b0b2901017f024042002000200184200284520440000b42002003422088520440000b2003a721040b20040b2601027f0240200020012002200310032105200541c0006a210420042005490440000b0b20040b1f01017f024020004108744180fe0371200041087641ff01717221010b20010b1e01027f02402000100541107421022002200041107610057221010b20010b\")
    (import \"ethereum\" \"codeCopy\" (func $eth.codeCopy (param i32 i32 i32)))
    (import \"ethereum\" \"revert\" (func $eth.revert (param i32 i32)))
    (import \"ethereum\" \"getCallValue\" (func $eth.getCallValue (param i32)))
    (import \"ethereum\" \"finish\" (func $eth.finish (param i32 i32)))
    (import \"ethereum\" \"getReturnDataSize\" (func $eth.getReturnDataSize (result i32)))
    (memory $memory (export \"memory\") 1)
    (export \"main\" (func $main))
    (global $global_ (mut i64) (i64.const 0))
    (global $global__1 (mut i64) (i64.const 0))
    (global $global__2 (mut i64) (i64.const 0))

(func $main
    (local $_1 i64)
    (local $_2 i32)
    (local $_3 i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $_4 i64)
    (local $_5 i64)
    (local $_6 i64)
    (local $_7 i64)
    (local $_8 i64)
    (local $_9 i64)
    (local $_10 i64)
    (local $_11 i64)
    (local $_12 i64)
    (local $_13 i64)
    (local $_14 i64)
    (local $_15 i64)
    (local $_16 i64)
    (local $_17 i64)
    (local $_18 i64)
    (local $_19 i64)
    (local $_20 i64)
    (block $label_
        (local.set $_1 (i64.const 0))
        (local.set $_2 (call $to_internal_i32ptr (local.get $_1) (local.get $_1) (local.get $_1) (i64.const 64)))
        (local.set $_3 (call $bswap64 (local.get $_1)))
        (i64.store (local.get $_2) (local.get $_3))
        (i64.store (i32.add (local.get $_2) (i32.const 8)) (local.get $_3))
        (i64.store (i32.add (local.get $_2) (i32.const 16)) (local.get $_3))
        (i64.store (i32.add (local.get $_2) (i32.const 24)) (call $bswap64 (i64.const 128)))
        (call $eth.getCallValue (i32.const 0))
        (local.set $z1 (call $bswap64 (i64.load (i32.const 0))))
        (local.set $z2 (call $bswap64 (i64.load (i32.add (i32.const 0) (i32.const 8)))))
        (local.set $z3 (call $bswap64 (i64.load (i32.add (i32.const 0) (i32.const 16)))))
        (if (i32.eqz (i64.eqz (i64.or (i64.or (local.get $z1) (local.get $z2)) (i64.or (local.get $z3) (call $bswap64 (i64.load (i32.add (i32.const 0) (i32.const 24)))))))) (then
            (block
                (local.set $_4 (call $returndatasize))
                (local.set $_5 (global.get $global_))
                (local.set $_6 (global.get $global__1))
                (local.set $_7 (global.get $global__2))

            )
            (block
                (local.set $_8 (call $returndatasize))
                (local.set $_9 (global.get $global_))
                (local.set $_10 (global.get $global__1))
                (local.set $_11 (global.get $global__2))

            )
            (call $revert (local.get $_8) (local.get $_9) (local.get $_10) (local.get $_11) (local.get $_4) (local.get $_5) (local.get $_6) (local.get $_7))))
        (local.set $_12 (datasize \"C_3_deployed\"))
        (block
            (local.set $_13 (call $returndatasize))
            (local.set $_14 (global.get $global_))
            (local.set $_15 (global.get $global__1))
            (local.set $_16 (global.get $global__2))

        )
        (call $codecopy (local.get $_13) (local.get $_14) (local.get $_15) (local.get $_16) (local.get $_1) (local.get $_1) (local.get $_1) (dataoffset \"C_3_deployed\") (local.get $_1) (local.get $_1) (local.get $_1) (local.get $_12))
        (block
            (local.set $_17 (call $returndatasize))
            (local.set $_18 (global.get $global_))
            (local.set $_19 (global.get $global__1))
            (local.set $_20 (global.get $global__2))

        )
        (call $return (local.get $_17) (local.get $_18) (local.get $_19) (local.get $_20) (local.get $_1) (local.get $_1) (local.get $_1) (local.get $_12))
    )
)

(func $u256_to_i32
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $v i32)
    (block $label__3
        (if (i64.ne (i64.const 0) (i64.or (i64.or (local.get $x1) (local.get $x2)) (local.get $x3))) (then
            (unreachable)))
        (if (i64.ne (i64.const 0) (i64.shr_u (local.get $x4) (i64.const 32))) (then
            (unreachable)))
        (local.set $v (i32.wrap_i64 (local.get $x4)))

    )
    (local.get $v)
)

(func $to_internal_i32ptr
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (result i32)
    (local $r i32)
    (local $p i32)
    (block $label__4
        (local.set $p (call $u256_to_i32 (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)))
        (local.set $r (i32.add (local.get $p) (i32.const 64)))
        (if (i32.lt_u (local.get $r) (local.get $p)) (then
            (unreachable)))

    )
    (local.get $r)
)

(func $bswap16
    (param $x i32)
    (result i32)
    (local $y i32)
    (block $label__5
        (local.set $y (i32.or (i32.and (i32.shl (local.get $x) (i32.const 8)) (i32.const 65280)) (i32.and (i32.shr_u (local.get $x) (i32.const 8)) (i32.const 255))))

    )
    (local.get $y)
)

(func $bswap32
    (param $x i32)
    (result i32)
    (local $y i32)
    (local $hi i32)
    (block $label__6
        (local.set $hi (i32.shl (call $bswap16 (local.get $x)) (i32.const 16)))
        (local.set $y (i32.or (local.get $hi) (call $bswap16 (i32.shr_u (local.get $x) (i32.const 16)))))

    )
    (local.get $y)
)

(func $bswap64
    (param $x i64)
    (result i64)
    (local $y i64)
    (local $hi i64)
    (block $label__7
        (local.set $hi (i64.shl (i64.extend_i32_u (call $bswap32 (i32.wrap_i64 (local.get $x)))) (i64.const 32)))
        (local.set $y (i64.or (local.get $hi) (i64.extend_i32_u (call $bswap32 (i32.wrap_i64 (i64.shr_u (local.get $x) (i64.const 32)))))))

    )
    (local.get $y)
)

(func $codecopy
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (param $z1 i64)
    (param $z2 i64)
    (param $z3 i64)
    (param $z4 i64)
    (block $label__8
        (call $eth.codeCopy (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)) (call $u256_to_i32 (local.get $z1) (local.get $z2) (local.get $z3) (local.get $z4)))
    )
)

(func $returndatasize
    (result i64)
    (local $z1 i64)
    (local $z2 i64)
    (local $z3 i64)
    (local $z4 i64)
    (block $label__9
        (local.set $z4 (i64.extend_i32_u (call $eth.getReturnDataSize)))

    )
    (global.set $global_ (local.get $z2))
    (global.set $global__1 (local.get $z3))
    (global.set $global__2 (local.get $z4))
    (local.get $z1)
)

(func $return
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__10
        (call $eth.finish (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
    )
)

(func $revert
    (param $x1 i64)
    (param $x2 i64)
    (param $x3 i64)
    (param $x4 i64)
    (param $y1 i64)
    (param $y2 i64)
    (param $y3 i64)
    (param $y4 i64)
    (block $label__11
        (call $eth.revert (call $to_internal_i32ptr (local.get $x1) (local.get $x2) (local.get $x3) (local.get $x4)) (call $u256_to_i32 (local.get $y1) (local.get $y2) (local.get $y3) (local.get $y4)))
    )
)

)
"}}}},"sources":{"A":{"id":0}}}
